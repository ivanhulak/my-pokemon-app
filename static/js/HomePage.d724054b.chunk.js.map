{"version":3,"file":"static/js/HomePage.d724054b.chunk.js","mappings":"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","sources":["components/CommonBtn.tsx","components/PokemonID.tsx","pages/ErrorPage.tsx","assets/svg/pag-btn.svg","components/Select.tsx","components/Pagination.tsx","components/NoPokemonsFound.tsx","../node_modules/react-content-loader/src/shared/uid.ts","../node_modules/react-content-loader/src/web/Svg.tsx","../node_modules/react-content-loader/src/web/ContentLoader.tsx","../node_modules/react-content-loader/src/web/presets/FacebookStyle.tsx","components/LoadingPokemon.jsx","components/Pokemon.tsx","components/PokemonsBlock.tsx","assets/svg/close-blue.svg","assets/svg/close-white.svg","components/PokemonTypes.tsx","pages/HomePage.tsx","utils/allTypes.ts","utils/functions/findColor.ts"],"sourcesContent":["import React from 'react'\nimport { PropsWithChildren } from 'react'\n\ntype CommonBtnProps = {\n   onClick: () => void;\n   className: string;\n}\n\nexport const CommonBtn: React.FC<PropsWithChildren<CommonBtnProps>> = (\n   {onClick, children, className}\n) => {\n\n  return (\n   <button className={className} onClick={onClick}>{children}</button>\n  )\n}","import { padStart } from \"lodash\";\nimport React from 'react'\n\ntype PokemonIDProps = {\n   id: number;\n   className: string;\n}\n\nexport const PokemonID: React.FC<PokemonIDProps> = ({id, className}) => {\n\n  return <div className={className}>\n    #{padStart(id?.toString(), 4, \"0\")}\n  </div>\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport pickachu from \"../assets/img/not-found-pikachu.png\";\nimport { CommonBtn } from \"../components/CommonBtn\";\n\ntype ErrorPageProps = {\n  error: string | undefined;\n  callback: () => void;\n}\n\nexport const ErrorPage: React.FC<ErrorPageProps> = ({ error, callback }) => {\n\n  const onClickTryAgain = () => callback()\n\n  return (\n    <div className=\"error\">\n      <div className=\"container\">\n        <div className=\"error__body\">\n          <h2 className=\"error__title\">Oops, some error happened</h2>\n          <p className=\"error__message\">{error}</p>\n          <img src={pickachu} alt=\"not found pickachu\" />\n          <CommonBtn className=\"error__btn\" onClick={onClickTryAgain}>\n            Try Again\n          </CommonBtn>\n          <Link to='/'>\n            <CommonBtn className=\"error__btn nav\" onClick={onClickTryAgain}>\n              Main Page\n            </CommonBtn>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgPagBtn(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\",\n    fill: \"#595F65\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16,2C8.3,2,2,8.3,2,16s6.3,14,14,14s14-6.3,14-14S23.7,2,16,2z M22.7,16.7l-4,4C18.5,20.9,18.3,21,18,21s-0.5-0.1-0.7-0.3 c-0.4-0.4-0.4-1,0-1.4l2.3-2.3H9c-0.6,0-1-0.4-1-1s0.4-1,1-1h10.6l-2.3-2.3c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l4,4 c0.1,0.1,0.2,0.2,0.2,0.3c0.1,0.2,0.1,0.5,0,0.8C22.9,16.5,22.8,16.6,22.7,16.7z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPagBtn);\nexport default __webpack_public_path__ + \"static/media/pag-btn.77ce483524b14726b98e7db83990ba39.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport cn from 'classnames';\n\nconst selectOptions: number[] = [10, 20, 50]\n\ntype SelectProps = {\n   currentOption: number;\n   onOptionChange: (option: number) => void;\n}\n\nexport const Select: React.FC<SelectProps> = ({onOptionChange, currentOption}) => {\n   const [isOpen, setIsOpen] = React.useState(false)\n\n   return (\n      <div \n         tabIndex={0} \n         className=\"select__container\"\n         onClick={() => setIsOpen(prev => !prev)}\n         onBlur={() => setIsOpen(false)}\n      >\n         <span className=\"select__value\">{currentOption}</span>\n         <ul className={cn('select__options', { 'show': isOpen })}>\n            {selectOptions.map((option: number) => (\n               <li\n                  key={option}\n                  className={cn('select__option', { 'selected': currentOption === option })}\n                  onClick={() => onOptionChange(option)}\n               >\n                  {option}\n               </li>\n            ))}\n         </ul>\n      </div>\n   );\n};\n","import React from \"react\";\nimport cn from \"classnames\";\nimport pag_btn from \"../assets/svg/pag-btn.svg\";\nimport { Select } from \"./Select\";\n\ntype PaginationProps = {\n  portionSize: number;\n  handleChangePage: (page: number) => void;\n  offsetPage: number;\n  pages: number[];\n  portionsCount: number;\n  portionNumber: number;\n  setPortionNumber: (prev: any) => void;\n  limit: number;\n  handleLimitChange: (limit: number) => void;\n};\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  portionSize,\n  handleChangePage,\n  offsetPage,\n  pages,\n  portionsCount,\n  portionNumber,\n  setPortionNumber,\n  limit,\n  handleLimitChange,\n}) => {\n  const leftPortion = (portionNumber - 1) * portionSize + 1;\n  const rightPortion = portionNumber * portionSize;\n\n  const handlePrev = () => setPortionNumber((prev: number) => prev - 1);\n  const handleNext = () => setPortionNumber((prev: number) => prev + 1);\n\n  return (\n    <div className=\"pagination\">\n      <div className=\"container\">\n        <div className=\"pagination__body\">\n          <button\n            className=\"pagination__btn pagination__btn--prev\"\n            onClick={handlePrev}\n            disabled={portionNumber === 1}\n          >\n            <img src={pag_btn} alt=\"pagination prev button\" />\n          </button>\n          <ul className=\"pagination__list\">\n            {pages\n              .filter((p: number) => p >= leftPortion && p <= rightPortion)\n              .map((p: number) => (\n                <li\n                  key={p}\n                  onClick={() => handleChangePage(p - 1)}\n                  className={cn({ 'active': (p - 1) * limit === (Math.ceil(offsetPage / limit)) * limit })}\n                >\n                  {p}\n                </li>\n              ))}\n          </ul>\n          <button\n            className=\"pagination__btn pagination__btn--next\"\n            onClick={handleNext}\n            disabled={portionsCount === portionNumber}\n          >\n            <img src={pag_btn} alt=\"pagination next button\" />\n          </button>\n        </div>\n        <div className=\"pagination__settings\">\n          <div className=\"pagination__settings-inner\">\n            <div className=\"pagination__settings-text\">Show</div>\n            <Select \n              onOptionChange={handleLimitChange}\n              currentOption={limit}\n            />\n            <div className=\"pagination__settings-text\">pokemons per page</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport pickachu from \"../assets/img/not-found-pikachu.png\";\nimport { CommonBtn } from \"./CommonBtn\";\n\nexport const NoPokemonsFound: React.FC<{callback: () => void}> = ({callback}) => {\n  \n  const onClickSearchOther = () => callback()\n  \n  return (\n    <div className=\"noPokemons\">\n      <div className=\"container\">\n        <div className=\"noPokemons__body\">\n          <h2 className=\"noPokemons__title\">No one pokemons found</h2>\n          <img src={pickachu} alt=\"not found pickachu\" />\n          <CommonBtn className=\"noPokemons__btn\" onClick={onClickSearchOther}>\n            Search other\n          </CommonBtn>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate = true,\n  animateBegin,\n  backgroundColor = '#f5f6f7',\n  backgroundOpacity = 1,\n  baseUrl = '',\n  children,\n  foregroundColor = '#eee',\n  foregroundOpacity = 1,\n  gradientRatio = 2,\n  gradientDirection = 'left-right',\n  uniqueKey,\n  interval = 0.25,\n  rtl = false,\n  speed = 1.2,\n  style = {},\n  title = 'Loading...',\n  beforeMask = null,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n  const gradientTransform =\n    gradientDirection === 'top-bottom' ? 'rotate(90)' : undefined\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      {beforeMask && React.isValidElement(beforeMask) ? beforeMask : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs>\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient} gradientTransform={gradientTransform}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n","import React from \"react\"\nimport ContentLoader from \"react-content-loader\"\n\nexport const LoadingPokemon = (props) => (\n  <ContentLoader \n    speed={2}\n    width={700}\n    height={800}\n    viewBox=\"0 0 700 800\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#c3c8ee\"\n    {...props}\n  >\n    <rect x=\"5\" y=\"35\" rx=\"10\" ry=\"10\" width=\"250\" height=\"57\" /> \n    <rect x=\"6\" y=\"116\" rx=\"30\" ry=\"30\" width=\"564\" height=\"559\" /> \n    <rect x=\"7\" y=\"715\" rx=\"15\" ry=\"15\" width=\"251\" height=\"86\" /> \n    <rect x=\"312\" y=\"716\" rx=\"15\" ry=\"15\" width=\"253\" height=\"85\" /> \n    <rect x=\"466\" y=\"43\" rx=\"10\" ry=\"10\" width=\"96\" height=\"36\" />\n  </ContentLoader>\n)","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport no_pokemon from '../assets/img/no-pokemon.png';\nimport { PokemonID } from \"./PokemonID\";\nimport { findColor } from \"../utils/functions/findColor\";\nimport { PokemonInfoType, PokemonTypesType } from \"../@types/pokemons-types\";\nimport { allTypes } from \"../utils/allTypes\";\n\nexport const Pokemon: React.FC<PokemonInfoType> = ({\n  id,\n  name,\n  image,\n  image_reserve,\n  types,\n}) => {\n\n  return (\n    <Link to={`/pokemon/${id}`}>\n      <div className=\"box-pokemons__item\">\n        <div className=\"box-pokemons__item-inner inner-pokemon\">\n          <div className=\"inner-pokemon__top\">\n            <div className=\"inner-pokemon__name\">{name}</div>\n            <PokemonID id={id} className=\"inner-pokemon__id\"/>\n          </div>\n          <div className=\"inner-pokemon__image\">\n            <img src={ image || image_reserve || no_pokemon} alt=\"pokemon\" />\n          </div>\n          <ul className=\"inner-pokemon__types\">\n            {types.length &&\n              types.map((t: PokemonTypesType) => (\n              <li \n                key={t.type.name} \n                style={{'background': `${findColor(allTypes, t.type.name, 'color')}`}}\n              >\n                {t.type.name}\n              </li>))}\n          </ul>\n        </div>\n      </div>\n    </Link>\n  );\n};\n","import React from \"react\";\nimport { StatusEnum } from \"../@types/enums/StatusEnum\";\nimport { PokemonInfoType } from \"../@types/pokemons-types\";\nimport { ErrorPage } from \"../pages/ErrorPage\";\nimport { selectPokemons } from \"../store/slices/pokemons\";\nimport { useAppSelector } from \"../store/store\";\nimport { NoPokemonsFound } from \"./NoPokemonsFound\";\nimport { LoadingPokemon } from \"./LoadingPokemon\";\nimport { Pokemon } from \"./Pokemon\";\n\nconst SKELETONS_COUNT = 10\n\nexport const PokemonsBlock: React.FC<{ fetchDataFunc: () => void }> = ({ fetchDataFunc }) => {\n\n  const { status, pokemonsInfoList, errorMessage } = useAppSelector(selectPokemons);\n\n  const skeleton = Array(SKELETONS_COUNT).fill(null)\n    .map((_, idx) => <LoadingPokemon key={idx} />)\n  const pokemonItems = pokemonsInfoList.map((pkmn: PokemonInfoType) =>\n    <Pokemon key={pkmn.url} {...pkmn} />\n  )\n\n  return (\n    <div className=\"pokemons\">\n      {status === StatusEnum.ERROR ? (\n        <ErrorPage error={errorMessage} callback={fetchDataFunc} />\n      ) : (\n        <div className=\"container\">\n          <div className=\"pokemons__box box-pokemons\">\n            {status === StatusEnum.LOADING ? skeleton : pokemonItems}\n          </div>\n          {status === StatusEnum.SUCCESS \n          && !pokemonItems.length \n          && <NoPokemonsFound callback={fetchDataFunc}/>}\n        </div>\n      )}\n    </div>\n  );\n};\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgCloseBlue(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"#072AC8\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\",\n    fill: \"#072AC8\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCloseBlue);\nexport default __webpack_public_path__ + \"static/media/close-blue.435faf82d98fb9c0cd5d80305e1f6b3c.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgCloseWhite(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"#fff\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\",\n    fill: \"#fff\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCloseWhite);\nexport default __webpack_public_path__ + \"static/media/close-white.63604452d2f67a07b9b6194bd2191bec.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport cn from \"classnames\";\nimport { allTypes, AllTypesType } from \"../utils/allTypes\";\nimport { useAppDispatch, useAppSelector } from \"../store/store\";\nimport { selectFilters, setOffsetPage, setSearch, setSelectedTypes } from \"../store/slices/filters\";\nimport { fetchPokemonsByType } from \"../store/reducers/fetchPokemonsByType\";\nimport pokeball_icon from \"../assets/img/pokeball.png\";\nimport close_icon from \"../assets/svg/close-blue.svg\";\nimport close_icon_white from \"../assets/svg/close-white.svg\";\nimport { FetchByTypeParamsType } from \"../@types/params-types\";\n\ntype PokemonTypesProps = {\n  handleSeeAll: () => void;\n  setPortionNumber: (portion: number) => void;\n}\n\nexport const PokemonTypes: React.FC<PokemonTypesProps> = ({ handleSeeAll, setPortionNumber }) => {\n\n  const dispatch = useAppDispatch();\n  const [isActive, setIsActive] = React.useState(false);\n  const [isOpened, setIsOpened] = React.useState(false);\n  const { selectedTypes, limit, offsetPage, search } = useAppSelector(selectFilters);\n\n  const onHandleSelectType = (type: AllTypesType) => {\n    dispatch(setSelectedTypes(type));\n    setIsOpened(true);\n  };\n\n  const onHandleSearch = () => {\n    if (search !== null) dispatch(setSearch(null));\n    if (selectedTypes) {\n      const params: FetchByTypeParamsType = {\n        types: selectedTypes.items,\n        offset: offsetPage,\n        limit,\n      };\n      dispatch(setOffsetPage())\n      setPortionNumber(1)\n      dispatch(fetchPokemonsByType(params));\n    }\n    \n    setIsOpened(false);\n    setIsActive(true);\n    setTimeout(() => setIsActive(false), 2000);\n  };\n\n  return (\n    <div className=\"types\">\n      <div className=\"container\">\n        <div className=\"types__body\">\n          <ul className=\"types__row\">\n            {allTypes.map((t: AllTypesType) => (\n              <li\n                key={t.url}\n                className={cn(\"types__type\", {\n                  active: selectedTypes?.items?.includes(t),\n                  disabled: isActive,\n                })}\n                style={{ background: t.color }}\n                onClick={() => onHandleSelectType(t)}\n              >\n                {t.name}\n              </li>\n            ))}\n            <li\n              className={cn(\"types__type all\", {\n                active: !selectedTypes,\n                disabled: isActive,\n              })}\n              onClick={handleSeeAll}\n            >\n              All\n            </li>\n          </ul>\n          <div\n            className={cn(\"types__choice\", {\n              opened: isOpened && selectedTypes?.items?.length,\n            })}\n          >\n            <ul className=\"types__choice-list\">\n              <div className=\"types__choice-text\">Search by these types: </div>\n              {selectedTypes?.items?.map((t: AllTypesType) => (\n                <li\n                  key={t.name}\n                  className=\"types__type choosen\"\n                  style={{ background: t.color }}\n                  onClick={() => onHandleSelectType(t)}\n                >\n                  {t.name}\n                  <img\n                    className=\"types__type-closeIcon\"\n                    src={close_icon_white}\n                    alt=\"close\"\n                  />\n                </li>\n              ))}\n              <button\n                className={cn(\"types__search-btn\", {\n                  hidden: !selectedTypes?.items?.length,\n                })}\n                onClick={onHandleSearch}\n                disabled={isActive || !selectedTypes?.items?.length}\n              >\n                <div className={cn(\"btn-pokeball\", { active: isActive })}>\n                  <img src={pokeball_icon} alt=\"pokeball\" />\n                </div>\n                <span>Go</span>\n              </button>\n            </ul>\n            <img\n              onClick={() => setIsOpened(false)}\n              className=\"types__choice-closeIcon\"\n              src={close_icon}\n              alt=\"close\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { StatusEnum } from \"../@types/enums/StatusEnum\";\nimport { FetchByTypeParamsType, FetchPokemonsParamsType } from \"../@types/params-types\";\nimport { Pagination } from \"../components/Pagination\";\nimport { PokemonsBlock } from \"../components/PokemonsBlock\";\nimport { PokemonTypes } from \"../components/PokemonTypes\";\nimport { fetchPokemonByName } from \"../store/reducers/fetchPokemonByName\";\nimport { fetchPokemons } from \"../store/reducers/fetchPokemons\";\nimport { fetchPokemonsByType } from \"../store/reducers/fetchPokemonsByType\";\nimport { clearSelectedTypes, selectFilters, setCurrentPage, setLimit, setSearch } from \"../store/slices/filters\";\nimport { setRecountAll, selectPokemons } from \"../store/slices/pokemons\";\nimport { useAppDispatch, useAppSelector } from \"../store/store\";\n\nexport const HomePage: React.FC = () => {\n\n  const [portionNumber, setPortionNumber] = React.useState(1);\n  const isMounted = React.useRef(false)\n  const dispatch = useAppDispatch();\n  const { offsetPage, limit, search, selectedTypes } = useAppSelector(selectFilters);\n  const { status, pages, portionSize, portionsCount, pokemonsInfoList, totalCount } =\n    useAppSelector(selectPokemons);\n\n  const handleChangePage = (page: number) => {\n    dispatch(setCurrentPage({ page, limit }));\n    window.scroll({ top: 0, behavior: \"smooth\" });\n  };\n  const handleLimitChange = (value: number) => {\n    dispatch(setLimit({value, offsetPage}))\n  };\n  const handleSeeAll = () => {\n    fetchDataFunc()\n    if(search) dispatch(setSearch(null))\n    dispatch(clearSelectedTypes())\n  }\n  const handlePortionNumber = (offset: number, limit: number, portionSize: number) => {\n    const page = Math.ceil(offset / limit) + 1\n    const currentPortion = Math.ceil(page / portionSize)\n    setPortionNumber(currentPortion)\n  }\n\n  const fetchDataFunc = React.useCallback(() => {\n    const params: FetchPokemonsParamsType = {\n      offset: offsetPage,\n      limit,\n    };\n    dispatch(fetchPokemons(params));\n  }, [dispatch, offsetPage, limit])\n\n  React.useEffect(() => {\n    if(search){\n      dispatch(fetchPokemonByName({ search, totalCount, offset: offsetPage, limit }))\n      if(pokemonsInfoList.length <= limit) setPortionNumber(1)\n    } \n    if(selectedTypes){\n      const params: FetchByTypeParamsType = {\n        types: selectedTypes?.items,\n        offset: offsetPage,\n        limit,\n      };\n      dispatch(fetchPokemonsByType(params))\n    } \n    if(search === null && selectedTypes === null) fetchDataFunc()\n  }, [dispatch, offsetPage, limit, search, totalCount]);\n\n  React.useEffect(() => {\n    if (isMounted.current){\n      const json = JSON.stringify({ limit })\n      localStorage.setItem('data', json)\n    }\n    isMounted.current = true\n    handlePortionNumber(offsetPage, limit, portionSize)\n    dispatch(setRecountAll(limit));\n  }, [dispatch, limit])\n  \n  return (\n    <>\n      <PokemonTypes handleSeeAll={handleSeeAll} setPortionNumber={setPortionNumber}/>\n      <PokemonsBlock fetchDataFunc={fetchDataFunc} />\n      {status === StatusEnum.SUCCESS \n        && pokemonsInfoList.length !== 0\n        && <Pagination \n              portionSize={portionSize}\n              handleChangePage={handleChangePage}\n              offsetPage={offsetPage}\n              pages={pages}\n              portionsCount={portionsCount}\n              portionNumber={portionNumber}\n              setPortionNumber={setPortionNumber}\n              limit={limit}\n              handleLimitChange={handleLimitChange}\n            />\n      }\n    </>\n  );\n};\n","import { POKEMON_API_POKEMON_TYPE } from \"../constants\";\n\nexport type AllTypesType = {\n  name: string;\n  color: string;\n  url: string;\n};\nexport const allTypes: AllTypesType[] = [\n  { name: \"normal\", color: \"#CB85BC\", url: `${POKEMON_API_POKEMON_TYPE}/normal/` },\n  { name: \"fighting\", color: \"#D54600\", url: `${POKEMON_API_POKEMON_TYPE}/fighting/` },\n  { name: \"flying\", color: \"#899CAF\", url: `${POKEMON_API_POKEMON_TYPE}/flying/` },\n  { name: \"ground\", color: \"#8F5518\", url: `${POKEMON_API_POKEMON_TYPE}/ground/` },\n  { name: \"poison\", color: \"#7F00FF\", url: `${POKEMON_API_POKEMON_TYPE}/poison/` },\n  { name: \"rock\", color: \"#693000\", url: `${POKEMON_API_POKEMON_TYPE}/rock/` },\n  { name: \"bug\", color: \"#009C68\", url: `${POKEMON_API_POKEMON_TYPE}/bug/` },\n  { name: \"ghost\", color: \"#A644A4\", url: `${POKEMON_API_POKEMON_TYPE}/ghost/` },\n  { name: \"steel\", color: \"#3CEAA5\", url: `${POKEMON_API_POKEMON_TYPE}/steel/` },\n  { name: \"water\", color: \"#4B49F4\", url: `${POKEMON_API_POKEMON_TYPE}/water/` },\n  { name: \"electric\", color: \"#FFC200\", url: `${POKEMON_API_POKEMON_TYPE}/electric/` },\n  { name: \"psychic\", color: \"#EC00B7\", url: `${POKEMON_API_POKEMON_TYPE}/psychic/` },\n  { name: \"ice\", color: \"#7AE2F3\", url: `${POKEMON_API_POKEMON_TYPE}/ice/` },\n  { name: \"grass\", color: \"#00CA6E\", url: `${POKEMON_API_POKEMON_TYPE}/grass/` },\n  { name: \"dragon\", color: \"#00C9B9\", url: `${POKEMON_API_POKEMON_TYPE}/dragon/` },\n  { name: \"dark\", color: \"#43464A\", url: `${POKEMON_API_POKEMON_TYPE}/dark/` },\n  { name: \"fairy\", color: \"#FD175E\", url: `${POKEMON_API_POKEMON_TYPE}/fairy/` },\n  { name: \"fire\", color: \"#FF0000\", url: `${POKEMON_API_POKEMON_TYPE}/fire/` },\n  {name: 'unknown', color: \"grey\", url: `${POKEMON_API_POKEMON_TYPE}/unknown/` },\n  {name: 'shadow', color: \"#000\", url: `${POKEMON_API_POKEMON_TYPE}/shadow/` },\n];\n","import { AllStatsType } from \"../allStats\";\nimport { AllTypesType } from \"../allTypes\";\n\nexport const findColor = (\n  arr: any,\n  typeName: string,\n  property: any\n) => {\n  const result =  arr.find((item: AllTypesType | AllStatsType) => typeName === item.name);\n  // @ts-ignore\n  return result[property]\n};\n"],"names":["CommonBtn","_ref","onClick","children","className","_jsx","PokemonID","id","_jsxs","padStart","toString","ErrorPage","error","callback","onClickTryAgain","src","pickachu","alt","Link","to","selectOptions","Select","onOptionChange","currentOption","_React$useState","React","_React$useState2","_slicedToArray","isOpen","setIsOpen","tabIndex","prev","onBlur","cn","map","option","Pagination","portionSize","handleChangePage","offsetPage","pages","portionsCount","portionNumber","setPortionNumber","limit","handleLimitChange","leftPortion","rightPortion","disabled","pag_btn","filter","p","Math","ceil","NoPokemonsFound","SVG","_a","_b","animate","animateBegin","_c","backgroundColor","_d","backgroundOpacity","_e","baseUrl","_f","foregroundColor","_g","foregroundOpacity","_h","gradientRatio","_j","gradientDirection","uniqueKey","_k","interval","_l","rtl","_m","speed","_o","style","_p","title","_q","beforeMask","props","__rest","fixedId","random","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","gradientTransform","undefined","createElement","__assign","role","isValidElement","x","y","width","height","clipPath","fill","offset","stopColor","stopOpacity","attributeName","values","repeatCount","begin","ContentLoader","ReactContentLoaderFacebook","viewBox","rx","cx","cy","r","LoadingPokemon","_objectSpread","ry","Pokemon","name","image","image_reserve","types","concat","no_pokemon","length","t","findColor","allTypes","type","PokemonsBlock","fetchDataFunc","_useAppSelector","useAppSelector","selectPokemons","status","pokemonsInfoList","errorMessage","skeleton","Array","_","idx","pokemonItems","pkmn","url","StatusEnum","ERROR","LOADING","SUCCESS","PokemonTypes","_selectedTypes$items2","_selectedTypes$items3","_selectedTypes$items4","_selectedTypes$items5","handleSeeAll","dispatch","useAppDispatch","isActive","setIsActive","_React$useState3","_React$useState4","isOpened","setIsOpened","selectFilters","selectedTypes","search","onHandleSelectType","setSelectedTypes","_selectedTypes$items","active","items","includes","background","color","opened","close_icon_white","hidden","setSearch","params","setOffsetPage","fetchPokemonsByType","setTimeout","pokeball_icon","close_icon","HomePage","isMounted","_useAppSelector2","totalCount","fetchPokemons","fetchPokemonByName","current","json","JSON","stringify","localStorage","setItem","page","currentPortion","handlePortionNumber","setRecountAll","_Fragment","clearSelectedTypes","setCurrentPage","window","scroll","top","behavior","value","setLimit","POKEMON_API_POKEMON_TYPE","arr","typeName","property","find","item"],"sourceRoot":""}