{"version":3,"file":"static/js/SinglePokemonPage.12d3ffc2.chunk.js","mappings":"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","sources":["components/PokemonID.tsx","components/PokemonBreeding.tsx","utils/allStats.ts","components/PokemonCard.tsx","pages/SinglePokemonPage.tsx","utils/allTypes.ts","utils/functions/findColor.ts"],"sourcesContent":["import { padStart } from \"lodash\";\nimport React from 'react'\n\ntype PokemonIDProps = {\n   id: number;\n   className: string;\n}\n\nexport const PokemonID: React.FC<PokemonIDProps> = ({id, className}) => {\n\n  return <div className={className}>\n    #{padStart(id?.toString(), 4, \"0\")}\n  </div>\n}","import React from \"react\";\n\nconst CALC_HIGHT_KOEF = 3.281\nconst CALC_WEIGHT_KOEF = 2.205\n\ntype PokemonBreedingProps = {\n  weight: number;\n  height: number;\n};\n\nexport const PokemonBreeding: React.FC<PokemonBreedingProps> = ({ weight, height }) => {\n\n  const calculatedHeight = (height / CALC_HIGHT_KOEF).toFixed(2);\n  const calculatedWeigth = (weight * CALC_WEIGHT_KOEF).toFixed(2);\n  \n  return (\n    <div className=\"singlePokemon__block block-breeding\">\n      <h2 className=\"block-breeding__title block-title\">Breeding</h2>\n      <div className=\"block-breeding__info\">\n        <div className=\"block-breeding__param\">\n          <div className=\"block-breeding__name\">Height</div>\n          <div className=\"block-breeding__values\">\n            <div className=\"block-breeding__value\">{height} ft</div>\n            <div className=\"block-breeding__value\">{calculatedHeight} m</div>\n          </div>\n        </div>\n        <div className=\"block-breeding__param\">\n          <div className=\"block-breeding__name\">Weight</div>\n          <div className=\"block-breeding__values\">\n            <div className=\"block-breeding__value\">{calculatedWeigth} lbs</div>\n            <div className=\"block-breeding__value\">{weight} kg</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export type AllStatsType = {\n   name: string;\n   color: string;\n   light_color: string;\n}\nexport const allStats: AllStatsType[] = [\n  { name: \"hp\", color: \"#00CA6E\", light_color: \"#c9fde6\" },\n  { name: \"attack\", color: \"#FF0000\", light_color: \"#ffbdbd\" },\n  { name: \"defense\", color: \"#4B49F4\", light_color: \"#c4c3f9\" },\n  { name: \"special-attack\", color: \"#D54600\", light_color: \"#f9d1be\" },\n  { name: \"special-defense\", color: \"#7F00FF\", light_color: \"#dbbef9\" },\n  { name: \"speed\", color: \"#FFC200\", light_color: \"#ffedb3\" },\n  { name: \"accuracy\", color: \"#CB85BC\", light_color: \"#eccae5\" },\n  { name: \"evasion\", color: \"#899CAF\", light_color: \"#ddedfd\" },\n];\n","import React from \"react\";\nimport { PokemonInfoType, PokemonStatItem, PokemonTypesType } from \"../@types/pokemons-types\";\nimport no_pokemon from \"../assets/img/no-pokemon.png\";\nimport { findColor } from \"../utils/functions/findColor\";\nimport { allStats } from \"../utils/allStats\";\nimport { allTypes } from \"../utils/allTypes\";\nimport { PokeballLoader } from \"./PokeballLoader\";\nimport { PokemonID } from \"./PokemonID\";\n\nexport const PokemonCard: React.FC<PokemonInfoType> = ({\n  id,\n  name,\n  types,\n  stats,\n  image,\n  image_reserve,\n}) => {\n\n  return (\n    <div className=\"singlePokemon__block block-single\">\n      <div className=\"block-single__top\">\n        <div className=\"block-single__info\">\n          <PokemonID id={id} className=\"block-single__id\" />\n          <div className=\"block-single__name\">{name}</div>\n        </div>\n        <div className=\"block-single__types\">\n          <ul className=\"block-single__types-list\">\n            {!types ? <PokeballLoader /> :\n              types.map((t: PokemonTypesType) => (\n                <li\n                  key={t.type.name}\n                  style={{ background: `${findColor(allTypes, t.type.name, \"color\")}` }}\n                >\n                  {t.type.name}\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n      <div className=\"block-single__main\">\n        <div className=\"block-single__stats stats-block\">\n          <div className=\"stats-block__inner\">\n            {!stats ? <PokeballLoader /> :\n              stats.map((item: PokemonStatItem) => (\n                <div key={item.stat.url} className=\"stats-block__stat\">\n                  <div className=\"stats-block__property\">{item.stat.name}</div>\n                  <div className=\"stats-block__scale\">\n                    <div\n                      className=\"stats-block__scale-max\"\n                      style={{\n                        background: `${findColor(\n                          allStats,\n                          item.stat.name,\n                          \"light_color\"\n                        )}`,\n                      }}\n                    ></div>\n                    <div\n                      className=\"stats-block__scale-indicator\"\n                      style={{\n                        width: `${item.base_stat < 100 ? item.base_stat : 100}%`,\n                        background: `${findColor(\n                          allStats,\n                          item.stat.name,\n                          \"color\"\n                        )}`,\n                      }}\n                    ></div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n        <div className=\"block-single__image\">\n          <img src={image || image_reserve || no_pokemon} alt=\"pokemon\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { PokemonBreeding } from \"../components/PokemonBreeding\";\nimport { PokemonCard } from \"../components/PokemonCard\";\nimport { fetchSinglePokemon } from \"../store/reducers/fetchSinglePokemon\";\nimport { useAppDispatch, useAppSelector } from \"../store/store\";\n\nexport const SinglePokemonPage: React.FC = () => {\n\n  window.scroll({ behavior: \"smooth\", top: 0 });\n  const dispatch = useAppDispatch();\n  const params = useParams();\n  const singlePokemon = useAppSelector(state => state.pokemons.singlePokemon);\n\n  React.useEffect(() => {\n    if(params.id) dispatch(fetchSinglePokemon({ id: Number(params.id) }))\n  }, [dispatch, params.id]);\n\n  return (\n    <div className=\"singlePokemon\">\n      <div className=\"container\">\n        <div className=\"singlePokemon__body\">\n          <PokemonCard {...singlePokemon} />\n          <PokemonBreeding weight={singlePokemon.weight} height={singlePokemon.height}/>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { POKEMON_API_POKEMON_TYPE } from \"../constants\";\n\nexport type AllTypesType = {\n  name: string;\n  color: string;\n  url: string;\n};\nexport const allTypes: AllTypesType[] = [\n  { name: \"normal\", color: \"#CB85BC\", url: `${POKEMON_API_POKEMON_TYPE}/normal/` },\n  { name: \"fighting\", color: \"#D54600\", url: `${POKEMON_API_POKEMON_TYPE}/fighting/` },\n  { name: \"flying\", color: \"#899CAF\", url: `${POKEMON_API_POKEMON_TYPE}/flying/` },\n  { name: \"ground\", color: \"#8F5518\", url: `${POKEMON_API_POKEMON_TYPE}/ground/` },\n  { name: \"poison\", color: \"#7F00FF\", url: `${POKEMON_API_POKEMON_TYPE}/poison/` },\n  { name: \"rock\", color: \"#693000\", url: `${POKEMON_API_POKEMON_TYPE}/rock/` },\n  { name: \"bug\", color: \"#009C68\", url: `${POKEMON_API_POKEMON_TYPE}/bug/` },\n  { name: \"ghost\", color: \"#A644A4\", url: `${POKEMON_API_POKEMON_TYPE}/ghost/` },\n  { name: \"steel\", color: \"#3CEAA5\", url: `${POKEMON_API_POKEMON_TYPE}/steel/` },\n  { name: \"water\", color: \"#4B49F4\", url: `${POKEMON_API_POKEMON_TYPE}/water/` },\n  { name: \"electric\", color: \"#FFC200\", url: `${POKEMON_API_POKEMON_TYPE}/electric/` },\n  { name: \"psychic\", color: \"#EC00B7\", url: `${POKEMON_API_POKEMON_TYPE}/psychic/` },\n  { name: \"ice\", color: \"#7AE2F3\", url: `${POKEMON_API_POKEMON_TYPE}/ice/` },\n  { name: \"grass\", color: \"#00CA6E\", url: `${POKEMON_API_POKEMON_TYPE}/grass/` },\n  { name: \"dragon\", color: \"#00C9B9\", url: `${POKEMON_API_POKEMON_TYPE}/dragon/` },\n  { name: \"dark\", color: \"#43464A\", url: `${POKEMON_API_POKEMON_TYPE}/dark/` },\n  { name: \"fairy\", color: \"#FD175E\", url: `${POKEMON_API_POKEMON_TYPE}/fairy/` },\n  { name: \"fire\", color: \"#FF0000\", url: `${POKEMON_API_POKEMON_TYPE}/fire/` },\n  {name: 'unknown', color: \"grey\", url: `${POKEMON_API_POKEMON_TYPE}/unknown/` },\n  {name: 'shadow', color: \"#000\", url: `${POKEMON_API_POKEMON_TYPE}/shadow/` },\n];\n","import { AllStatsType } from \"../allStats\";\nimport { AllTypesType } from \"../allTypes\";\n\nexport const findColor = (\n  arr: any,\n  typeName: string,\n  property: any\n) => {\n  const result =  arr.find((item: AllTypesType | AllStatsType) => typeName === item.name);\n  // @ts-ignore\n  return result[property]\n};\n"],"names":["PokemonID","_ref","id","className","_jsxs","children","padStart","toString","PokemonBreeding","weight","height","calculatedHeight","toFixed","calculatedWeigth","_jsx","allStats","name","color","light_color","PokemonCard","types","stats","image","image_reserve","map","t","style","background","concat","findColor","allTypes","type","PokeballLoader","item","stat","width","base_stat","url","src","no_pokemon","alt","SinglePokemonPage","window","scroll","behavior","top","dispatch","useAppDispatch","params","useParams","singlePokemon","useAppSelector","state","pokemons","React","fetchSinglePokemon","Number","_objectSpread","POKEMON_API_POKEMON_TYPE","arr","typeName","property","find"],"sourceRoot":""}